# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1




  #  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: [].




  #  build-tags:
  #    - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-dirs:
    - src/external_libs
    - autogenerated_by_my_lib
    - cmd/generic
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: false
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-files:
    - ".*\\.my\\.go$"
    - lib/bad.go
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false

# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  #  format: json
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: true
linters:
  # Disable all linters.
  disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default-linters
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
    - asciicheck
    - bidichk
    - bodyclose
    - depguard
    - dupl
    - durationcheck
    - exportloopref
    - gochecknoinits
    - goconst
    #    - gofmt
    - gosimple
    - govet
    - makezero
    - misspell
    - nilerr
    - nilnil
    - paralleltest
    - staticcheck
    - structcheck
    - tenv
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - wastedassign
    - promlinter
    - funlen
    - gomodguard
    - goprintffuncname
    - importas
    - unconvert
    #    - maligned
    #    - errorlint
    #    - varnamelen
    #    - gocritic
    #    - nestif
    #    - gocyclo
    #    - contextcheck [no]
    #    - cyclop
    #    - dogsled
    #    - errname
    #    - exhaustive
    #    - exhaustivestruct
    - forbidigo
    - forcetypeassert
    - gci
    #    - gochecknoglobals
    #    - gocognit
    #    - godot
    #    - godox
    #    - goerr113
    #    - gofumpt
    #    - goheader
    #    - goimports
    #    - golint
    #    - gomnd [magic]
    #    - gomoddirectives [no]
    #    - gosec
    #    - ifshort (long time)
    #    - interfacer [depr]
    #    - ireturn
    #    - lll [line length]
    #    - nakedret
    #    - nlreturn
    #    - noctx
    #    - nolintlint
    #    - prealloc
    #    - predeclared
    #    - revive
    - rowserrcheck
    #    - scopelint
    #    - sqlclosecheck
    #    - stylecheck
    #    - tagliatelle [no]
    #    - unparam
    #    - whitespace
    #    - wrapcheck [err wrapping]
    #    - wsl [white space ... after decl?]
  # Enable all available linters.
  #  enable-all: true
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default-linters--e--enable
  # Run only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: true


issues:
  max-issues-per-linter: 10

linters-settings:
  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 2
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    min-occurrences: 10
    # Ignore test files.
    # Default: false
    ignore-tests: true
    # Look for existing constants matching the values.
    # Default: true
    match-constant: false
    # Search also for duplicated numbers.
    # Default: false
    numbers: false
    # Minimum value, only works with goconst.numbers
    # Default: 3
    min: 3
    # Maximum value, only works with goconst.numbers
    # Default: 3
    max: 3
    # Ignore when constant is not used as function argument.
    # Default: true
    ignore-calls: false

  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 200
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: 100
